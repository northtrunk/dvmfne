#
# Global System Parameters
#   Path           - working path for files, leave it alone unless you NEED to change it
#
[Global]
Path: ./

#
# Network Reporting Configuration
#   Enabling "REPORT" will configure a socket-based reporting
#   system that will send the configuration and other items
#   to a another process (local or remote) that may process
#   the information for some useful purpose, like a web dashboard.
#
#   Report         - True to enable, False to disable
#   ReportRCM - If True, and ReportNetworks = 'NETWORK', will send RCM
#       Packets to connected reporting clients. This also requires
#       individual IPSC systems to have RCM and CON_APP both set 'True'
# 
#   ReportInterval - Seconds between reports
#   ReportPort - TCP port to listen on if "REPORT_NETWORKS" = NETWORK
#   ReportClients - comma separated list of IPs you will allow clients
#       to connect on.
#
[Reports]
Report: False
ReportRCM:
ReportInterval: 60
ReportPort: 4321
ReportClients: 127.0.0.1

#
# Logging Configuration
#   This allows the logger to be configured without chaning the individual
#   python logger stuff. LOG_FILE should be a complete path/filename for *your*
#   system -- use /dev/null for non-file handlers.
#
#   LogHandlers    - may be any of the following, please, no spaces in the
#                    list if you use several:
#                      null
#                      console
#                      console-timed
#                      file
#                      file-timed
#                      syslog
#   LogLevel       - may be any of the standard syslog logging levels, though
#                    as of now, DEBUG, INFO, WARNING and CRITICAL are the only ones
#                    used.
#   RawPacketTrace -
#   LogPeerStatus  -
#   LogMasterStatus-
#
[Log]
LogFile: /tmp/dmrlink.log
LogHandlers: console-timed
LogLevel: INFO
LogName: DMRlink
RawPacketTrace: False
LogPeerStatus: False
LogMasterStatus: False

#
# Aliases and ID Configuration
#   Subscriber Whitelist and Blacklist Aliases
#
[Aliases]
Path: ./
WhitelistRIDsFile: whitelist_ids.csv
BlacklistRIDsFile: blacklist_ids.csv
StaleDays: 7

#
# IPSC Network Configuration
# Please read these closely - catastrophic results could result by setting
# certain flags for things DMRlink cannot do.
# 
# [NAME]            The name you want to use to identify the IPSC instance (use
#                   something better than "IPSC1"...)
# Enabled:          Should we communicate with this network? Handy if you need to
#		            shut one down but don't want to lose the config
# PeerId:           This is the radio ID that DMRLink should use to communicate
# IP:               This is the local IPv4 address to listen on. It may be left
#                   blank if you do not need or wish to specify. It is mostly
#                   useful when DMRlink uses multiple interfaces to serve as an
#                   application gateway/proxy from private and/or VPN networks
#                   to the real world.
# Port:             This is the UDP source port for DMRLink to use for this
#                   PSC network, must be unique!!!
# AliveTimer:       Seconds between keep-alive transmissions
# MaxMissed:        How many missed keep-alives before we remove a peer
# PeerOper:         This signals the master and peers whether or not we are
#                   operational. True is the only thing that makes sense.
# IPSCMode:         May be 'DIGITAL', 'ANALOG', or 'NONE'. Digital is really the
#                   only thing that makes sense.
# TSxLink:          Is this time slot linked?
# CSBKCall:         Should be False, we cannot process these, but may be useful
#                   for debugging.
# RCM:              Repeater Call Monitoring - don't unable unless you plan to
#                   actually use it, this creates extra network traffic.
# ConApp:           Third Party Console App - exactly what DMRlink is, should
#                   be set to True, and must be if you intend to process RCM
#                   packets (like with network-based reporting)
# XNL_Call:         Can cause problems if not set to False, DMRlink does not
#                   process XCMP/XNL calls.
# XNL_Master:       Obviously, should also be False, see XNL_CALL.
# DataCall:         Process data calls. True if you want to process data calls
# VoiceCall:        Process voice calls. True if you want to process voice calls
# MasterPeer:       True if DMRlink will be the master, False if we're a peer
# AuthEnabled:      Do we use authenticated IPSC?
# AuthKey:          The Authentication key (up to 40 hex characters)
# MasterIP:         IP address of the IPSC master (ignored if DMRlink is the master)
# MasterPort:       UDP port of the IPSC master (ignored if DMRlink is the master)
# GroupHangtime:    Group hangtime, per DMR configuration
#
# ...Repeat the block for each IPSC network to join.
#

[DMRLNK_PEER]
Enabled: False
PeerId: 12345
IP:  
Port: 50000
AliveTimer: 5
MaxMissed: 20
PeerOper: True
IPSCMode: DIGITAL
TS1Link: True
TS2Link: True
CSBKCall: False
RCM: False
ConApp: False
XNL_Call: False
XNL_Master: False
DataCall: True
VoiceCall: True
MasterPeer: False
AuthEnabled: True
AuthKey: 1A2B3C
MasterIP: 1.2.3.4
MasterPort: 12345
GroupHangtime: 5
